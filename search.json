[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"/articles/basic_example.html","id":"preparing-the-data","dir":"Articles","previous_headings":"","what":"Preparing the data","title":"How to use GeoPressureR: an example","text":"start, install GeoPressureR package Github using following line: using following libraries:","code":"devtools::install_github(\"Rafnuss/GeoPressureR\") library(GeoPressureR) library(raster) library(leaflet) library(ggplot2) library(plotly) library(RColorBrewer)"},{"path":"/articles/basic_example.html","id":"reading-geolocator-data","dir":"Articles","previous_headings":"Preparing the data","what":"Reading geolocator data","title":"How to use GeoPressureR: an example","text":"example, use data captured Great Reed Warbler Acrocephalus arundinaceus (18LX). , read geolocator data crop equipment retrieval date.","code":"pam_data = pam_read(pathname = system.file(\"extdata\", \"/\", package = \"GeoPressureR\"),                     crop_start = \"2017-06-20\", crop_end = \"2018-05-02\")"},{"path":"/articles/basic_example.html","id":"automatic-classification-of-activity","dir":"Articles","previous_headings":"Preparing the data","what":"Automatic classification of activity","title":"How to use GeoPressureR: an example","text":"use simple k-mean clustering define periods relatively high activity, classify high activities lasting 30 minutes migratory activities. See possible classifications described PALMr manual.","code":"pam_data = pam_classify(pam_data, min_duration = 30)"},{"path":"/articles/basic_example.html","id":"editing-on-trainset","dir":"Articles","previous_headings":"Preparing the data","what":"Editing on TRAINSET","title":"How to use GeoPressureR: an example","text":"ensure high level precision needed pressure match, must manually edit activity classification pressure timeseries matched. suggest TRAINSET. separate vignette dedicated exercise, including best practices sample code get started, available . Use trainset_write() export automatically generated classifications csv file, can opened TRAINSET: https://trainset.geocene.com/. Printscreen manual classification TRAINSET. See labeling track vignette information. finished manual editing, export new csv file (TRAINSET add -labeled name). Make sure keep classification file (e.g. /data/). re-edit existing labeled file, can simply re-open file TRAINSET read file directly trainset_read().","code":"trainset_write(pam_data, pathname=system.file(\"extdata\", \"/\", package = \"GeoPressureR\")) # browseURL(\"https://trainset.geocene.com/\") pam_data = trainset_read(pam_data, pathname=system.file(\"extdata\", \"/\", package = \"GeoPressureR\"))"},{"path":"/articles/basic_example.html","id":"identifying-stationary-periods","dir":"Articles","previous_headings":"Preparing the data","what":"Identifying stationary periods","title":"How to use GeoPressureR: an example","text":"Based activity labeling, pam_sta() creates table stationary periods illustrated . can visualize pressure measurements grouped stationary period (symbolized color).","code":"pam_data = pam_sta(pam_data) knitr::kable(head(pam_data$sta)) p <- subset(pam_data$pressure, sta_id != 0) %>%    ggplot() +   geom_point(data=pam_data$pressure, aes(x=date,y=obs), colour=\"black\",size=0.25) +   geom_line(aes(x=date,y=obs,col=as.factor(sta_id))) +    theme_bw() +   scale_y_continuous(name=\"Pressure(hPa)\") +   scale_colour_manual(values=rep(RColorBrewer::brewer.pal(9,\"Set1\"),times=4))   #scale_colour_brewer(type=\"qualitative\", palette = 'Set1')  ggplotly(p, dynamicTicks = T)"},{"path":"/articles/basic_example.html","id":"compute-map-of-pressure","dir":"Articles","previous_headings":"","what":"Compute map of pressure","title":"How to use GeoPressureR: an example","text":"Now can see clean smooth pressure timeseries stationary period, finally ready match one atmospheric pressure data (ERA5). R package relying API GeoPressure overcome challenge computing mismatch large dataset performing compution Google Earth Engine. Read API Initially, easier faster query long stationary periods. can setting stationay period pressure NA. can now query data API geopressure_map(). detailed description parameters can found geopressure_map() returns list two rasters stationary periods. first one mean square error (\\(\\textbf{MSE}\\)) pressure timeseries ERA5 map. second one (\\(\\textbf{z}_{thr}\\)) proportion datapoint pressure timeserie correspond altitude within min max altitude found grid cell. Read values abd computed . combine two raster probability map , \\[\\textbf{P} = \\exp \\left(-w \\frac{\\textbf{MSE}}{s} \\right) [\\textbf{z}_{thr}>thr]\\] \\(s\\) standard deviation pressure \\(thr\\) threasholv . auto-correlation timeseries accounted equation, use log-linear pooling weight \\(w=\\log(n) - 1\\), \\(n\\) number datapoint timeserie. operation describe publication […]. write another vignette describe influence log-linear pooling length time series later. can use leaflet() visualize maps mismatch, threshold probability single stationary period. can also visualize stationary period (probability)","code":"sta_id_keep = pam_data$sta$sta_id[difftime(pam_data$sta$end,pam_data$sta$start, units = \"hours\")>12] pam_data$pressure$sta_id[!(pam_data$pressure$sta_id %in% sta_id_keep)] = NA extent = c(-16,20,0,50) # coordinates of the map to request (W,E,S,N)  scale = 10 # request on a 0.1° grid to make the code faster max_sample = 250 # limit the query to the first 250 datapoints.  margin = 30 # roughly equivalent to 3hPa raster_list = geopressure_map(pam_data$pressure, extent = extent, scale = scale, max_sample = max_sample, margin = margin) s = 0.4 # standard deviation of pressure thr = 0.9 # threashold of the threahold proportion value acceptable prob_map_list = geopressure_prob_map(raster_list, s=s, thr=thr) i_r = 1; leaflet() %>% addTiles() %>%   addRasterImage(prob_map_list[[i_r]], opacity = 0.8, group=\"Probability\") %>%   addRasterImage(raster_list[[i_r]][[1]], opacity = 0.8, group=\"Mismatch\") %>%   addRasterImage(raster_list[[i_r]][[2]], opacity = 0.8, group=\"Threashold\") %>%   # addLegend(pal = pal, values = values(v[[i_s]][[3]]), title = \"Probability\") %>%    addLayersControl(     overlayGroups = c(\"Probability\",\"Mismatch\",\"Threashold\"),     options = layersControlOptions(collapsed = FALSE)   ) %>% hideGroup(c(\"Mismatch\",\"Threashold\")) li_s=list() l = leaflet() %>% addTiles()  for (i_r in 1:length(prob_map_list)){   i_s = metadata(prob_map_list[[i_r]])$sta_id   info = pam_data$sta[pam_data$sta$sta_id==i_s,]   info_str = paste0(i_s,\" | \",info$start,\"->\",info$end)   li_s <- append(li_s, info_str)   l = l %>% addRasterImage(prob_map_list[[i_r]], opacity = 0.8, group=info_str)  } l %>%    addLayersControl(     overlayGroups = li_s,     options = layersControlOptions(collapsed = FALSE)   ) %>% hideGroup(tail(li_s,length(li_s)-1))"},{"path":"/articles/basic_example.html","id":"compute-altitude","dir":"Articles","previous_headings":"","what":"Compute altitude","title":"How to use GeoPressureR: an example","text":"second operation can perform GeoPressure compute exact altitude bird \\(z_{gl}\\) pressure measurement \\(P_{gl}\\) assuming location \\(x\\). function uses ERA5 adjust barometric equation, \\[ z_{gl}(x)=z_{ERA5}(x) + \\frac{T_{ERA5}(x)}{L_b}  \\left( \\frac{P_{gl}}{P_{ERA5}(x)} \\right) ^{\\frac{RL_b}{g M}-1},\\] \\(z_{ERA}\\), \\(T_{ERA}\\) \\(T_{ERA}\\) ground level elevation, temperature 2m ground level pressure ERA5, \\(L_b\\) standard temperature lapse rate, \\(R\\) universal gas constant, \\(g\\) gravity constant \\(M\\) molar mass air. See information can compute elevation bird first stationary period using likely position probability map. can extract pressure stationary period finally call function geopressure_ts can compare altitude produce one computed without correction temperature pressure. Visualize function geopressure_ts() also returns ground level pressure timeseries ERA5 location specified. useful check good match pressure measured geolocator one assumed location. operation typically used check good quality manual labeling (see labeling track vignette).","code":"i_r = 1 i_s = metadata(prob_map_list[[i_r]])$sta_id tmp = as.data.frame(prob_map_list[[i_r]],xy=T) lon = tmp$x[which.max(tmp[,3])] lat = tmp$y[which.max(tmp[,3])] id = pam_data$pressure$sta_id==i_s & !is.na(pam_data$pressure$sta_id) pressure = list(   obs = pam_data$pressure$obs[id],   date = pam_data$pressure$date[id],   class = pam_data$pressure$class[id] ) ts_list[[i_r]]  = geopressure_ts(lon, lat, pressure = pressure) Lb = -0.0065 R = 8.31432 g0 = 9.80665 M = 0.0289644 T0 = 273.15+15 P0 = 1013.25 ts_list[[i_r]]$altitude_baro = T0/Lb * ((ts_list[[i_r]]$pressure/P0)^(-R*Lb/g0/M) - 1 ) p <- ggplot() +   geom_line(data=as.data.frame(ts_list[[i_r]]), aes(x=date,y=altitude, col=as.factor(\"Corrected elevation with ERA5\"))) +    geom_line(data=as.data.frame(ts_list[[i_r]]), aes(x=date,y=altitude_baro, col=as.factor(\"Uncorrected elevation\"))) +    labs(col=\"\") +   theme_bw()  ggplotly(p)"},{"path":"/articles/compare_to_light.html","id":"combine-with-light","dir":"Articles","previous_headings":"","what":"Combine with Light","title":"compare_to_light","text":"Standard processure following https://geolocationmanual.vogelwarte.ch/twilight.html Get twilight Calibraiton","code":"lon.calib = 17.05    lat.calib = 48.9 #twl = twilightCalc(PAM_data$light$date, PAM_data$light$obs, LightThreshold = 2, ask = F) # d.calib = subset(twl, (tSecond<=head(behaviour$timetable$start,1)) |  #                        (tFirst>=tail(behaviour$timetable$end,1))) #  # gE = getElevation(twl = d.calib, known.coord = c(lon.calib, lat.calib),method = \"gamma\", plot = F) #  # crds = coord(twl, degElevation = 90-gE[1], note = FALSE) # tripMap(crds) # points(lon.calib, lat.calib, pch = 21, cex = 1.5, bg = \"white\") # adding the release location"},{"path":"/articles/labeling_tracks.html","id":"why-a-manual-labeling","dir":"Articles","previous_headings":"","what":"Why a manual labeling?","title":"Labeling Tracks","text":"might wonder, machine learning, surely, need anything manually anymore. heck bother manual editing? Put simply, faster. Trying find algorithm work species, individuals, type migration probably possible. Trying get algorithm tuned specific track take time going track. can expect spend 30sec 10min per tracks. saving time, give sense bird . ’ll get know ’s moving (e.g., long continuous high altitude flight, short ones multiple days, alternation short migration-stopover etc…). also give idea uncertainty classification. bird really moving just changing altitude? useful analyse track later. important reason pressure mapping required highly accurately labelled acitivity pressure data. Firstly activity labeling defined stationary period flight duration. Short stationary period can particularly hard defined, expert knowledge might useful. Flight duration important impact movement model short successive stationary period (pressure mapping precise), really want accurate flight duration good esitmation bird’s position. Secondly, pressure timeserie matching algorithm sensitive erroneously labeled pressure, even single mislabeled datapoint can estimation map. said, worth starting manual editing automatically labeled timeserie. Check possible classification method PALMr manual.","code":""},{"path":"/articles/labeling_tracks.html","id":"overview-of-the-process","dir":"Articles","previous_headings":"","what":"Overview of the process","title":"Labeling Tracks","text":"Run automatic classification (e.g., classify_flap()) Create label csv file (trainset.write(), 18IC_act_pres.csv) Open file www.trainset.geocene.com Label activity pressure Export labeled csv file (18IC_act_pres-labeled.csv) Read file R (trainset.read()) See example process section “Editing Pressure Activity Trainset” basic example truth process ’ll repeat step 2-6 mulitiple time looking pressue timeserie match.","code":""},{"path":"/articles/labeling_tracks.html","id":"quick-tour-of-trainset","dir":"Articles","previous_headings":"","what":"Quick tour of trainset","title":"Labeling Tracks","text":"TRAINSET (www.trainset.geocene.com) “lightweight web application brushing labels onto time series data; useful building training sets.” can read trainset www.trainset.geocene.com https://github.com/Geocene/trainset. quite intuitive: upload csv file (e.g., 18IC_act_pres.csv). View uploading file things miss: - Keyboard shortcut super useful navigation (zoom /, move left/right) labeling (add/remove label). - number datapoint (depending resolution track), might one keep narrow temporal window avoid browser get slow irresponsive. - can change “Reference Series” pressure see timeseries time useful see bird . - also play y-axis range see properly small pressure variation. important, might miss outiliar doesn’t stands full range (e.g., 500-1500 hPa) - Trainest offers flexibility label required: can add remove label value (bottom-right page. order trainset.read() work, don’t change/edit/add label, simply use one offered : “FALSE” “TRUE”. Example pressure ouliar visible pressure y-axis narrow.","code":""},{"path":"/articles/labeling_tracks.html","id":"best-practices","dir":"Articles","previous_headings":"","what":"Best practices","title":"Labeling Tracks","text":"task relatively simple: label migratory activity “TRUE” accelaration remove pressure outliar “TRUE” pressure timeserie. However, lot small loophole can make task actually difficult. Let see exemples. Missing single datapoint acceleration create staionary period split flight two. happens regularly KNN classfier. Accurate classification flight duration can difficult bird migrates less intensity end flight. Defining exaclty stationary period species can difficult (Tawny Pipit) activities 6am low-intensity migratory movement long non-migratory acitivity (feeding), anything ! situation certain classification activity possible. worth reminding labelisation activity two-fold: - Define flight duration, used movement model ultimately strongest impact (1) estimation position short stopver long flight (.e, ) (2) estimation fight speed position bird well constrain. Ultimately datapoint less won’t strong impact long flight. estimation short movement can relatively tricky. partially accommodate , compute effort_duration flight, normalize duration migratory flight intensity activity entire journey bird. - Define stationary period, used pressure timeserie matching. stage, useful add pressure timeserie understand implication defining stationary period pressure timeseries Although Red-capped Robin Chat active moring, can notice drop pressure 9PM similar level activity 9am next day don’t affect pressure time series. think ’s best think stationary period, period pressure timeserie continuous enough able match map. balence need found creating enough stationary period account position bird able estimated creating many stationary period, loose duration timeserie able match. important, looking creating long timeserie pressure containing sufficient temporal varation, variation due local/short movement (often latitude varition. , one option label activity create new stationary period. option avoid create many stationary period label pressure time serie outliar. datapoint won’t used match timeserie. ## Sample code small script written help get started checking labelization can see basic example vignette get background processing labelization. Test 1: Duration stationary period flight first easy test check labelization computing duration flight stationary period. exemple, ’m using first version exported trainset probably don’t want stationary period flight duration shorter couple hours. can go back trainset using exact time table adapt labelization see fit export new version csv file. Note last row nextFlightDuration zero ’s last stationary period. Test 2: Pressure timeserie second check computing map visualize timeserie pressure grouping stationary period. Ploting figure PlotlyR allows zoom-pan check time series correctly. Make sure stationary period don’t include pressure measurement flight. might able see anomalies temporal variation pressure. case can already label pressure timeserie remove . sure, next step. Export new version. Test 3: pressure match long stationary period checked far pressure timeseries correctly label respective staionary period look relatively smooth. stage can query GeoPressure! third test consists finding location best match compare pressure timeseries. allow use distinguish movement bird natural variation pressure. might want start long stationary periods first see result. ’re happy, can test shortest one. can query data. save time vignette ’ll actually load data ’ve saved earlier. code given , ’ll locate best match query timeserie pressure location. get error, try look probability map best match (see commented line starting leadlet()) can now look similar figure pressure timeserie, time comparing geolocator data best match reanalysis data. figure accelerometer data trainset, can spend lot time trying figure bird moved, moves, changes location (ie, meaning moving ~10km) juste flew another elevation area? moves location, new stationary period. , might appropriate label pressure elevation don’t want keep. track actually relatively easy present major challenge. can save last version.","code":"pam_data = pam_read(pathname = system.file(\"extdata\", \"/\", package = \"GeoPressureR\"),                     crop_start = \"2017-06-20\", crop_end = \"2018-05-02\") pam_data = trainset_read(pam_data, system.file(\"extdata\", \"/\", package = \"GeoPressureR\"), filename = \"18LX_act_pres-labeled-v1.csv\") pam_data = pam_sta(pam_data) knitr::kable(pam_data$sta[difftime(pam_data$sta$end,pam_data$sta$start, units = \"mins\")<60 | pam_data$sta$next_flight_duration<30,]) pam_data = trainset_read(pam_data, system.file(\"extdata\", \"/\", package = \"GeoPressureR\"), filename = \"18LX_act_pres-labeled-v2.csv\") pam_data = pam_sta(pam_data)  p <- subset(pam_data$pressure, sta_id != 0) %>%    ggplot() +   geom_line(aes(x=date,y=obs,col=as.factor(sta_id))) +    theme_bw() +   scale_colour_manual(values=rep(RColorBrewer::brewer.pal(9,\"Set1\"),times=4))   #scale_colour_brewer(type=\"qualitative\", palette = 'Set1')  ggplotly(p, dynamicTicks = T) pam_data = trainset_read(pam_data, system.file(\"extdata\", \"/\", package = \"GeoPressureR\"), filename = \"18LX_act_pres-labeled-v3.csv\") pam_data = pam_sta(pam_data)  sta_id_keep = pam_data$sta$sta_id[difftime(pam_data$sta$end,pam_data$sta$start, units = \"hours\")>12] pam_data$pressure$sta_id[!(pam_data$pressure$sta_id %in% sta_id_keep)] = NA message(\"Number of stationay period to query: \",length(sta_id_keep)) # data(\"prob_map_list\", package = \"GeoPressureR\") data(\"ts_list\", package = \"GeoPressureR\") raster_list = geopressure_map(pam_data$pressure, extent=c(-16,20,0,50), scale=10, max_sample=100) prob_map_list = geopressure_prob_map(raster_list) ts_list=list() for (i_r in 1:length(prob_map_list)){   i_s = metadata(prob_map_list[[i_r]])$sta_id    # find the max value of probability   tmp = as.data.frame(prob_map_list[[i_r]],xy=T)   lon = tmp$x[which.max(tmp[,3])]   lat = tmp$y[which.max(tmp[,3])]      # filter pressure for the stationary period and include flight period before and after   id = pam_data$pressure$sta_id==i_s & !is.na(pam_data$pressure$sta_id)      # Visual check   # leaflet() %>% addTiles() %>% addRasterImage(prob_map_list[[i_r]]) %>% addMarkers(lat=lat,lng=lon)      # query the pressure at this location   message(\"query:\",i_r,\"/\",length(sta_id_keep))   ts_list[[i_r]] = geopressure_ts(lon,                               lat,                                pressure = list(                                 obs = pam_data$pressure$obs[id],                                 date = pam_data$pressure$date[id]                               ))   # Add sta_id     ts_list[[i_r]]['sta_id'] = i_s        # Remove mean   ts_list[[i_r]]$pressure0 = ts_list[[i_r]]$pressure - mean(ts_list[[i_r]]$pressure) + mean(pam_data$pressure$obs[id]) }  # Save the data for vignette # usethis::use_data(ts_list,prob_map_list) p <- ggplot() +   geom_point(data=as.data.frame(pam_data$pressure), aes(x=date,y=obs), colour=\"grey\",size=0.5) +   geom_line(data=do.call(\"rbind\", ts_list), aes(x=date,y=pressure0,col=as.factor(sta_id))) +    theme_bw() +   scale_colour_manual(values=rep(RColorBrewer::brewer.pal(9,\"Set1\"),times=4))  ggplotly(p, dynamicTicks = T)#%>% layout(legend = list(orientation = \"h\", x = -0.5))"},{"path":"/articles/labeling_tracks.html","id":"futur-improvement","dir":"Articles","previous_headings":"","what":"Futur improvement?","title":"Labeling Tracks","text":"lot can improve process: - Run trainset offline. - -pass create csv, uplad csv, read csv runing browser session directly R - Building R (shiny) equivalent Trainset directly integrated R package. Problem: can’t find good package label point figure R, maintain trainset free. - suggestions? Write issue Gitub","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Raphaël Nussbaumer. Author, maintainer. Mathieu Gravey. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Nussbaumer R, Gravey M (2022). GeoPressureR: Location Reanalysed Pressure. R package version 1.1.","code":"@Manual{,   title = {GeoPressureR: Location from Reanalysed Pressure},   author = {Raphaël Nussbaumer and Mathieu Gravey},   year = {2022},   note = {R package version 1.1}, }"},{"path":"/index.html","id":"geopressurer","dir":"","previous_headings":"","what":"Location from Reanalysed Pressure","title":"Location from Reanalysed Pressure","text":"goal GeoPressureR help researcher analyse pressure measurement geolocator. particular, provides R wrapper around GeoPressure API query proability map using ERA5 pressure.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Location from Reanalysed Pressure","text":"can install development version GeoPressureR GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"Rafnuss/GeoPressureR\")"},{"path":"/index.html","id":"where-to-start","dir":"","previous_headings":"","what":"Where to start?","title":"Location from Reanalysed Pressure","text":"vignette basic esample probably best place understand basic workflow package.","code":""},{"path":"/index.html","id":"related-ressources","dir":"","previous_headings":"","what":"Related ressources","title":"Location from Reanalysed Pressure","text":"PressureGeolocator Developement method done MATLAB. repo codes. GeoPressure API hard core computation Google Earth Engine done. can look see done. GeoLight R package analyse light data. PAMLr: Extensive toolbox analyse multi-sensor geolocator. Several function package inspired package.","code":""},{"path":"/index.html","id":"how-to-cite","dir":"","previous_headings":"","what":"How to cite?","title":"Location from Reanalysed Pressure","text":"manuscript preparation","code":""},{"path":"/index.html","id":"want-to-contribute","dir":"","previous_headings":"","what":"Want to contribute?","title":"Location from Reanalysed Pressure","text":"Don’t hesitate reach ’re interested contributing. can also submit issue Github ideas, bug, etc…","code":""},{"path":"/reference/geopressure_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Request and download mismatch maps of pressure — geopressure_map","title":"Request and download mismatch maps of pressure — geopressure_map","text":"function return mismatch map atmospheric pressure measured geolocator (PAM_data). performs following actions: (1) Send query produce Google Earth Engine (GEE) url code producing maps stationary periods separately, (2) read map (geotiff) raster (3) compute likelihood map mismatch","code":""},{"path":"/reference/geopressure_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Request and download mismatch maps of pressure — geopressure_map","text":"","code":"geopressure_map(pressure, extent, scale = 10, max_sample = 250, margin = 30)"},{"path":"/reference/geopressure_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Request and download mismatch maps of pressure — geopressure_map","text":"pressure pressure list PAM logger dataset list. extent Geographical extend map query list ordered West,East,South,North  (e.g. c(-6,43,0,47)) scale Number pixel per latitude, longitude. 10 resoltion 0.1° (~10) 4 resolution 0.25° (~30km). avoid interpolating ERA5 data, scale smaller 10. Read scale Google earth Engine documention. max_sample computation mismatch performed max_sample datapoints pressure reduce computational time. samples randomly (uniformly) selected timeserie. margin margin used threshold map accept measurement error. unit meter. (1hPa~10m)","code":""},{"path":"/reference/geopressure_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Request and download mismatch maps of pressure — geopressure_map","text":"List raster map","code":""},{"path":"/reference/geopressure_prob_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute probability raster — geopressure_prob_map","title":"Compute probability raster — geopressure_prob_map","text":"function convert raster noramlized MSE altitude threshold \\(z_{thr}\\) computed geopressure_map() probability map , \\(p = \\exp \\left(-w \\frac{MSE}{s} \\right) \\left[z_{thr}>thr \\right],\\) \\(s\\) standard deviation pressure \\(thr\\) threashold. auto-correlation timeseries accounted equation, use log-linear pooling weight \\(w=\\log(n) - 1\\), \\(n\\) number data point timeserie. operation describe ","code":""},{"path":"/reference/geopressure_prob_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute probability raster — geopressure_prob_map","text":"","code":"geopressure_prob_map(raster_list, s = 1, thr = 0.9)"},{"path":"/reference/geopressure_prob_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute probability raster — geopressure_prob_map","text":"raster_list list raster loaded geopressure_map() s standard deviation pressure error thr threshold percentage data point outside elevation range considered possible","code":""},{"path":"/reference/geopressure_prob_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute probability raster — geopressure_prob_map","text":"List probability raster map","code":""},{"path":"/reference/geopressure_ts.html","id":null,"dir":"Reference","previous_headings":"","what":"Request and download surface pressure timeseries at location — geopressure_ts","title":"Request and download surface pressure timeseries at location — geopressure_ts","text":"function return surfrace atmospheric pressure timeseries ERA5 particualy location specify lat lon. uses SRTM-30 translate pressure exact elevation ground level, accounting temporal varation pressure temperature.","code":""},{"path":"/reference/geopressure_ts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Request and download surface pressure timeseries at location — geopressure_ts","text":"","code":"geopressure_ts(lon, lat, pressure = NULL, end_time = NULL, start_time = NULL)"},{"path":"/reference/geopressure_ts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Request and download surface pressure timeseries at location — geopressure_ts","text":"lon longitude query (-180° 180°). lat latitude query (0° 90°). pressure pressure list PAM logger dataset list end_time start_time start_time pressure provided, start_time timeserie return needed","code":""},{"path":"/reference/geopressure_ts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Request and download surface pressure timeseries at location — geopressure_ts","text":"Timeserie date, pressure optionally altitude","code":""},{"path":"/reference/geopressure_ts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Request and download surface pressure timeseries at location — geopressure_ts","text":"supply pressure (time) geolocator, additionally return elevation geolocator sea level considering bird located location specify timeserie response time supply, otherwise, return hourly basis start_time end_time.","code":""},{"path":"/reference/pam_classify.html","id":null,"dir":"Reference","previous_headings":"","what":"Automatic classification of pam — pam_classify","title":"Automatic classification of pam — pam_classify","text":"function uses activity data classify migratory flapping flight. fonction inspired function classify_flap pamLr package.","code":""},{"path":"/reference/pam_classify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automatic classification of pam — pam_classify","text":"","code":"pam_classify(pam, min_duration = 30)"},{"path":"/reference/pam_classify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automatic classification of pam — pam_classify","text":"pam data list min_duration duration minutes","code":""},{"path":"/reference/pam_classify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Automatic classification of pam — pam_classify","text":"pam","code":""},{"path":"/reference/pam_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read pam data — pam_read","title":"Read pam data — pam_read","text":"Imports multi-sensor logger data folder optionally crop specific date. Read available file extension list exist folder.","code":""},{"path":"/reference/pam_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read pam data — pam_read","text":"","code":"pam_read(   pathname,   extension = c(\"pressure\", \"glf\", \"acceleration\", \"temperature\", \"magnetic\"),   crop_start = \"1900-01-01\",   crop_end = \"2100-01-01\" )"},{"path":"/reference/pam_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read pam data — pam_read","text":"pathname path files stored extension list file extentions read (e.g., \".pressure\", \".glf\", \".gle\",\".acceleration\", \".temperature\" \".magnetic\") crop_start date pam data start crop_end date pam data end","code":""},{"path":"/reference/pam_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read pam data — pam_read","text":"list measurements","code":""},{"path":"/reference/pam_read_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Read pam file — pam_read_file","title":"Read pam file — pam_read_file","text":"Read pam file return corresponding data.frame.","code":""},{"path":"/reference/pam_read_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read pam file — pam_read_file","text":"","code":"pam_read_file(filename, crop_start, crop_end)"},{"path":"/reference/pam_read_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read pam file — pam_read_file","text":"filename path files stored crop_start posicxt object date pam data start crop_end posicxt object date pam data end","code":""},{"path":"/reference/pam_read_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read pam file — pam_read_file","text":"data.frame measurement","code":""},{"path":"/reference/pam_sta.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute stationary periods — pam_sta","title":"Compute stationary periods — pam_sta","text":"function computes table stationary periods class acceleration pam$acceleration$class add pam","code":""},{"path":"/reference/pam_sta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute stationary periods — pam_sta","text":"","code":"pam_sta(pam)"},{"path":"/reference/pam_sta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute stationary periods — pam_sta","text":"pam pam logger dataset list","code":""},{"path":"/reference/pam_sta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute stationary periods — pam_sta","text":"pam logger dataset list dataframe stationary periods pam$sta well new label named sta_id (pam$pressure$sta_id pam$acceleration$sta_id)","code":""},{"path":"/reference/prob_map_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability map for 18LX — prob_map_list","title":"Probability map for 18LX — prob_map_list","text":"dataset contains data generated GeoPressure API vignette basic_example.Rmdand labeling_tracks.Rmd.","code":""},{"path":"/reference/prob_map_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability map for 18LX — prob_map_list","text":"","code":"prob_map_list"},{"path":"/reference/prob_map_list.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Probability map for 18LX — prob_map_list","text":"object class list length 27.","code":""},{"path":"/reference/trainset_edit.html","id":null,"dir":"Reference","previous_headings":"","what":"Edit classification of activity and pressure — trainset_edit","title":"Edit classification of activity and pressure — trainset_edit","text":"function perform three steps: (1) write csv file automatically labeled activity pressure trainset_write, (2) open trainset broweser (https://trainset.geocene.com/) can edit labels (3) read exported csv file trainset trainset_read.","code":""},{"path":"/reference/trainset_edit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Edit classification of activity and pressure — trainset_edit","text":"","code":"trainset_edit(   pam,   pathname,   filename = paste0(pam$id, \"_act_pres-labeled.csv\") )"},{"path":"/reference/trainset_edit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Edit classification of activity and pressure — trainset_edit","text":"pam pam logger dataset list pathname Path folder labeled files saved filename Name file.","code":""},{"path":"/reference/trainset_edit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Edit classification of activity and pressure — trainset_edit","text":"pam logger dataset list updated new label named class(pam$pressure$class pam$acceleration$class)","code":""},{"path":"/reference/trainset_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read classification of activity and pressure — trainset_read","title":"Read classification of activity and pressure — trainset_read","text":"function read exported csv file trainset (https://trainset.geocene.com/) update pam logger dataset","code":""},{"path":"/reference/trainset_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read classification of activity and pressure — trainset_read","text":"","code":"trainset_read(   pam,   pathname,   filename = paste0(pam$id, \"_act_pres-labeled.csv\") )"},{"path":"/reference/trainset_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read classification of activity and pressure — trainset_read","text":"pam pam logger dataset list pathname Path folder labeled file . filename Name file.","code":""},{"path":"/reference/trainset_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read classification of activity and pressure — trainset_read","text":"pam logger dataset list updated new label named class(pam$pressure$class pam$acceleration$class)","code":""},{"path":"/reference/trainset_write.html","id":null,"dir":"Reference","previous_headings":"","what":"Write classification of activity and pressure — trainset_write","title":"Write classification of activity and pressure — trainset_write","text":"function writes csv file automatically labeled activity pressure can read TRAINSET (https://trainset.geocene.com/).","code":""},{"path":"/reference/trainset_write.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write classification of activity and pressure — trainset_write","text":"","code":"trainset_write(pam, pathname, filename = paste0(pam$id, \"_act_pres\"))"},{"path":"/reference/trainset_write.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write classification of activity and pressure — trainset_write","text":"pam pam logger dataset list pathname Path folder labeled files saved filename Name file.","code":""},{"path":"/reference/ts_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability timeseries for 18LX — ts_list","title":"Probability timeseries for 18LX — ts_list","text":"dataset contains data generated GeoPressure API vignette basic_example.Rmdand labeling_tracks.Rmd.","code":""},{"path":"/reference/ts_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability timeseries for 18LX — ts_list","text":"","code":"ts_list"},{"path":"/reference/ts_list.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Probability timeseries for 18LX — ts_list","text":"object class list length 27.","code":""}]
