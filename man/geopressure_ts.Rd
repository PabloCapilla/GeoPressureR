% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geopressure.R
\name{geopressure_ts}
\alias{geopressure_ts}
\title{Request and download surface pressure timeseries at location}
\usage{
geopressure_ts(lon, lat, pressure = NULL, end_time = NULL, start_time = NULL)
}
\arguments{
\item{lon}{longitude to query (-180째 to 180째).}

\item{lat}{latitude to query (0째 to 90째).}

\item{pressure}{pressure list from PAM logger dataset list}

\item{end_time}{same as start_time}

\item{start_time}{if pressure not provided, then the start_time of the
timeserie return is needed}
}
\value{
Timeserie of date, pressure and optionally altitude
}
\description{
This function return the surfrace atmospheric pressure timeseries from ERA5
at a particualy location specify by lat and lon. I uses SRTM-30 to translate
the pressure for the exact elevation of the ground level, accounting for
both temporal varation of pressure and temperature.
}
\details{
If you supply the pressure (and time) of the geolocator, it will additionally
return the elevation of the geolocator above sea level considering that the
bird was located at the location specify

The timeserie of the response will be on the same as time if supply,
otherwise, it will return on a hourly basis between \code{start_time} and
\code{end_time}.
}
\examples{
\dontrun{
pam_data <- pam_read(
  pathname = system.file("extdata", package = "GeoPressureR"),
  crop_start = "2017-06-20", crop_end = "2018-05-02"
)
pam_data <- trainset_read(pam_data,
  pathname = system.file("extdata", package = "GeoPressureR")
)
pam_data <- pam_sta(pam_data)
ts_list[[1]] <- geopressure_ts(
  lon = 16.85,
  lat = 48.75,
  pressure = subset(pam_data$pressure, sta_id == 1)
)
}
data("ts_list", package = "GeoPressureR")
par(mfrow = c(2, 1), mar = c(2, 5, 1, 1))
plot(ts_list[[1]]$date,
  ts_list[[1]]$pressure,
  ylab = "Pressure [hPa]", xlab = ""
)
plot(ts_list[[1]]$date,
  ts_list[[1]]$altitude,
  ylab = "Altitude [m asl]", xlab = ""
)
}
