% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geopressure.R
\name{geopressure_ts}
\alias{geopressure_ts}
\title{Request and download surface pressure timeseries at location}
\usage{
geopressure_ts(
  lon,
  lat,
  pressure = NULL,
  end_time = NULL,
  start_time = NULL,
  verbose = TRUE
)
}
\arguments{
\item{lon}{Longitude to query (-180째 to 180째).}

\item{lat}{Latitude to query (0째 to 90째).}

\item{pressure}{Pressure list from PAM logger dataset list (optional).}

\item{end_time}{If \code{pressure} is not provided, then \code{end_time} define the ending time of
the timeserie as POSIXlt.}

\item{start_time}{If \code{pressure} is not provided, then \code{start_time} define the starting time of
the timeserie as POSIXlt.}

\item{verbose}{Display (or not) the progress of the query (logical).}
}
\value{
A data.frame containing the timeserie of pressure and optionally altitude if \code{pressure}
is provided.
}
\description{
This function return the surface atmospheric pressure timeseries from ERA5 at a queried location.
}
\details{
If you supply the pressure (and time) of the geolocator \eqn{P_{gl}}, the function will
additionally return the altitude of the geolocator above sea level \eqn{z_{gl}} using the
barometric equation,
\deqn{ z_{{gl}}(x)=z_{ERA5}(x) + \frac{T_{ERA5}(x)}{L_b}  \left( \frac{P_{gl}}{P_{ERA5}(x)}
\right)^{\frac{RL_b}{g M}-1},}
where \eqn{z_{ERA}}, \eqn{T_{ERA}} and \eqn{P_{ERA}} respectively correspond to the ground level
elevation, temperature at 2m and ground level pressure of ERA5, \eqn{L_b}  is the standard
temperature lapse rate, \eqn{R} is the universal gas constant, \eqn{g} is the gravity constant
and  \eqn{M} is the molar mass of air. See more information on
\href{https://raphaelnussbaumer.com/GeoPressureAPI/#description-1}{the GeoPressureAPI documentation}.

The timeserie of the response will be on the same as time if supply, otherwise, it will return
on a hourly basis between \code{start_time} and \code{end_time}.

If the location query is over water, the location will be moved to the closest onshore location.

To be able to compare the temporal variation of the retrieved pressure of ERA5 \eqn{P_{ERA}} to
the geolocator pressure \eqn{P_{gl}}, the function also return the ERA pressure normalized with
the geolocator mean pressure measurement as \code{pressure0}.
\deqn{ P_{0}(\boldsymbol{x})[t] = \left( P_{ERA5}(\boldsymbol{x})[t]-P_{gl}[t]\right) -
\left( \frac{1}{n}\sum_{i=1}^{n} P_{ERA5}(\boldsymbol{x})[i]-P_{gl}[i] \right).}

See the \href{/articles/probability-aggregation.html#error-term}{article on probability aggregation}
for more information on the meaning of this value.
}
\examples{
\dontrun{
pam_data <- pam_read(
  pathname = system.file("extdata", package = "GeoPressureR"),
  crop_start = "2017-06-20", crop_end = "2018-05-02"
)
pam_data <- trainset_read(pam_data,
  pathname = system.file("extdata", package = "GeoPressureR")
)
pam_data <- pam_sta(pam_data)
pressure_timeserie[[1]] <- geopressure_ts(
  lon = 16.85,
  lat = 48.75,
  pressure = subset(pam_data$pressure, sta_id == 1)
)
}
pressure_timeserie <- readRDS(system.file("extdata", "18LX_pressure_timeserie.rda",
  package = "GeoPressureR"
))
head(pressure_timeserie[[1]])
par(mfrow = c(2, 1), mar = c(2, 5, 1, 1))
plot(pressure_timeserie[[1]]$date, pressure_timeserie[[1]]$pressure,
  ylab = "Pressure [hPa]", xlab = "", type = "l"
)

plot(pressure_timeserie[[1]]$date, pressure_timeserie[[1]]$altitude,
  ylab = "Altitude [m asl]", xlab = "", type = "l"
)
}
\seealso{
\code{\link[=geopressure_ts_path]{geopressure_ts_path()}}, \href{https://raphaelnussbaumer.com/GeoPressureR/articles/pressure-map.html}{Vignette Pressure Map },
}
